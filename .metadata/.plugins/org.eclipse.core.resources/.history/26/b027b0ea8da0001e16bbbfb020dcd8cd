package application.controller;
import java.io.IOException;

import javax.imageio.plugins.tiff.BaselineTIFFTagSet;

import org.json.JSONArray;
import org.json.JSONObject;
import application.model.database.OpenSeaDB;
import application.service.SeeCollectionService;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.control.TextField;
import javafx.scene.input.MouseEvent;
import javafx.scene.layout.VBox;

public class SeeCollectionController extends MyController implements ICallUrl{
	private static final String URL = "application/Analysis.fxml" ;
	private static final String HEADER_STRING = "Phân tích tương quan" ;
	private JSONArray data = new JSONArray(); 
	private SeeCollectionService option ;
	@FXML
	private VBox root;
	@FXML
	private Label header;
	@FXML
	private VBox showArea;
	@FXML
	private TextField search ;
	@FXML
	private ComboBox<String> marketplace;
	
	public SeeCollectionController() {
		loadView(); 
	}
	public VBox getRoot() {
		return root ;
	}
	
	@FXML
	void searchButtonPressed(ActionEvent event) {
		if(marketplace.getValue()   == null) {
			ListController addInform = new ListController() ;
			addInform.add("Hãy chọn sàn NFT", null,null);
			showArea.getChildren().add(addInform.getRoot());
		} 
		else {
		  loadData();
		  if(data.length()==0) {
			 ListController addInform = new ListController() ;
			 addInform.add("Không tìm thấy kết quả", null, null);
			 showArea.getChildren().add(addInform.getRoot());
		  } 
		  else {
		  showArea.getChildren().clear();	
		  for(int i = 0; i < data.length() ;i++) {	
				ListController addList = new ListController() ;
				JSONObject jsonObject = data.getJSONObject(i);
				addList.add(jsonObject.getString("name"),jsonObject.getString("volume"),Integer.toString(jsonObject.getInt("rank")));
				addList.getRoot().addEventFilter(MouseEvent.MOUSE_CLICKED, new EventHandler<MouseEvent>() {
					@Override
					public void handle(MouseEvent arg0) {
						GraphController graph = new GraphController();
						call(graph);
						graph.loadData(marketplace.getValue(),jsonObject.getString("name"));
					}
				});
				showArea.getChildren().add(addList.getRoot());
			}
		  }
		}
	}
	
	@Override
	public void loadView() {
		FXMLLoader fxmlLoader = new FXMLLoader(getClass().getClassLoader().getResource(URL));
		fxmlLoader.setController(this);
	      try {
	          root = fxmlLoader.load();
	      } catch (IOException e) {
	    	  e.printStackTrace();
	      }
	     header.setText(HEADER_STRING);
	     ObservableList<String> options = FXCollections.observableArrayList("OpenSea","Binance");
	     marketplace.setItems(options);   
	}
	
	private void loadData() {
		if     (search.getText().isEmpty() && (marketplace.getValue().equals("OpenSea")))  { 
			option = new SeeCollectionService(new OpenSeaDB()) ;
			data   = option.getAllCollectionInPreviousDay() ;
		}	
		else if (search.getText().isEmpty() && (marketplace.getValue().equals("Binance"))) {
			 option = new SeeCollectionService(new OpenSeaDB()) ;
			 data   = option.getAllCollectionInPreviousDay() ;	
		}
		else if(!search.getText().isEmpty() && (marketplace.getValue().equals("OpenSea"))) {
			 option = new SeeCollectionService(new OpenSeaDB()) ;
			 data   = option.getCollectionByNameInPreviousDay(search.getText()) ;
		}
		else if(!search.getText().isEmpty() && (marketplace.getValue().equals("Binance"))) {
			 option = new SeeCollectionService(new OpenSeaDB()) ;
			 data   = option.getCollectionByNameInPreviousDay(search.getText()) ;
		}
		
	 }
	
//	private void loadData(String name, String market) {
//		if     (market.equals("OpenSea"))   { option = new SeeCollectionService(new OpenSeaDB()) ;
//											  data =  option.getCollectionByNameInPreviousDay(name) ;}
//		else if(market.equals("Binance"))   { option = new SeeCollectionService(new OpenSeaDB()) ;
//		  									  data =  option.getCollectionByNameInPreviousDay(name) ; }
//	}
//	
//	private void loadData(String market) {
//		if     (market.equals("OpenSea"))   { option = new SeeCollectionService(new OpenSeaDB()) ;
//											  data =  option.getAllCollectionInPreviousDay() ;}	
//		else if(market.equals("Binance"))   { option = new SeeCollectionService(new OpenSeaDB()) ;
//		  									  data =  option.getAllCollectionInPreviousDay() ; }
//	}
	@Override
	public void call(MyController controller) {
		root.getChildren().clear();
		root.getChildren().add(controller.getRoot()); 
	}	
}
